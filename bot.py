# wb_finder_bot_lite.py
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, ContextTypes, filters
from flask import Flask
from threading import Thread
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TELEGRAM_TOKEN = "8359908342:AAFT5jgAHvDo5wnuZqZEM1A4OkboU4TE4IU"  # üî• –ó–∞–º–µ–Ω–∏—Ç—å –≤ Render —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
CHANNEL_LINK = "https://t.me/+uGrNl01GXGI4NjI6"
SEARCH_BASE = "https://www.wildberries.ru/catalog/0/search.aspx?search="

# === Flask –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (—á—Ç–æ–±—ã Render –Ω–µ "—É–±–∏–ª" –ø—Ä–æ—Ü–µ—Å—Å) ===
app_flask = Flask('')

@app_flask.route('/')
def home():
    return "‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7"

def run():
    port = int(os.getenv('PORT', 8080))
    app_flask.run(host='0.0.0.0', port=port)

def keep_alive():
    logger.info("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Flask-—Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏...")
    t = Thread(target=run)
    t.daemon = True
    t.start()

# üß† –ü—Ä–∏–º–µ—Ä "—É–º–Ω–æ–≥–æ" –ø–æ–∏—Å–∫–∞: –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–ø-5 —Å—Å—ã–ª–æ–∫ –ø–æ –∑–∞–ø—Ä–æ—Å—É
def search_wb_links(query: str) -> list:
    # –ü—Ä–∏–º–µ—Ä—ã —Ç–æ–≤–∞—Ä–æ–≤ (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ API –∏–ª–∏ –ë–î –ø–æ–∑–∂–µ)
    base_query = query.replace(" ", "+")
    return [
        {
            "name": f"–¢–æ–ø 1: {query} ‚Äî –ª—É—á—à–∏–π –≤—ã–±–æ—Ä",
            "price": 2999,
            "reviews": 150,
            "link": f"{SEARCH_BASE}{base_query}&xsubject=100"
        },
        {
            "name": f"–¢–æ–ø 2: {query} ‚Äî –ø—Ä–µ–º–∏—É–º –≤–µ—Ä—Å–∏—è",
            "price": 4599,
            "reviews": 98,
            "link": f"{SEARCH_BASE}{base_query}&xsubject=200"
        },
        {
            "name": f"–¢–æ–ø 3: {query} ‚Äî –±—é–¥–∂–µ—Ç–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç",
            "price": 1899,
            "reviews": 220,
            "link": f"{SEARCH_BASE}{base_query}&xsubject=300"
        },
        {
            "name": f"–¢–æ–ø 4: {query} ‚Äî —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π",
            "price": 3499,
            "reviews": 176,
            "link": f"{SEARCH_BASE}{base_query}&xsubject=400"
        },
        {
            "name": f"–¢–æ–ø 5: {query} ‚Äî —Ö–∏—Ç –ø—Ä–æ–¥–∞–∂",
            "price": 3999,
            "reviews": 301,
            "link": f"{SEARCH_BASE}{base_query}&xsubject=500"
        }
    ]

# ü§ñ –ö–æ–º–∞–Ω–¥–∞ /start —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π, —Å—Å—ã–ª–∫–æ–π –∏ –∫–Ω–æ–ø–∫–æ–π
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ö–Ω–æ–ø–∫–∞
    keyboard = [[InlineKeyboardButton("üîç –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫", callback_data="start_searching")]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –¢–µ–∫—Å—Ç —Å –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–æ–π –Ω–∞ –∫–∞–Ω–∞–ª
    await update.message.reply_text(
        "üéâ *–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –ø–æ –ø–æ–∏—Å–∫—É —Å–∞–º—ã—Ö –≤—ã–≥–æ–¥–Ω—ã—Ö —Ü–µ–Ω –Ω–∞ Wildberries!* üõçÔ∏è\n\n"
        "üî• –ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥—ë—à—å:\n"
        "‚úÖ *–¢–æ–ø–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã* —Å —Å–∞–º—ã–º–∏ –≤—ã—Å–æ–∫–∏–º–∏ –æ—Ü–µ–Ω–∫–∞–º–∏ ‚≠ê\n"
        "üí∞ *–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —Å–∫–∏–¥–∫–∏* –∏ –ª—É—á—à–∏–µ —Ü–µ–Ω—ã üí∏\n"
        "üì¶ *–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã* –æ—Ç —Ç—ã—Å—è—á –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π üì£\n\n"
        "üìå –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª: [*–õ—É—á—à–µ–µ —Å Wildberries | DenShop1*](https://t.me/+uGrNl01GXGI4NjI6)\n"
        "–¢–∞–º ‚Äî —Ç–æ–ª—å–∫–æ —Å–∞–º—ã–µ –≥–æ—Ä—è—á–∏–µ —Å–∫–∏–¥–∫–∏ –∏ –ª–∞–π—Ñ—Ö–∞–∫–∏ –ø–æ –ø–æ–∫—É–ø–∫–∞–º! üî•\n\n"
        "üöÄ –ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –Ω–∞—á–Ω–∏ —ç–∫–æ–Ω–æ–º–∏—Ç—å —É–∂–µ —Å–µ–π—á–∞—Å!",
        parse_mode="Markdown",
        disable_web_page_preview=True,
        reply_markup=reply_markup
    )

# ü§ñ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    if query.data == "start_searching":
        await query.edit_message_text(
            "–û—Ç–ª–∏—á–Ω–æ! üî•\n"
            "–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –Ω–∞–π—Ç–∏ –Ω–∞ Wildberries.\n\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä:\n"
            "‚Ä¢ –ù–∞—É—à–Ω–∏–∫–∏ Sony\n"
            "‚Ä¢ –ö—Ä–æ—Å—Å–æ–≤–∫–∏\n"
            "‚Ä¢ Power Bank"
        )

# ü§ñ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.message.text.strip()
    if len(query) < 2:
        await update.message.reply_text("‚ùå –ó–∞–ø—Ä–æ—Å —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π.")
        return

    # –°–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–æ–π –Ω–∞ –∫–∞–Ω–∞–ª
    await update.message.reply_text(
        f"üî• [*–õ—É—á—à–µ–µ —Å Wildberries | DenShop1*](https://t.me/+uGrNl01GXGI4NjI6)\n"
        f"–ò—â—É: *{query}*",
        parse_mode="Markdown",
        disable_web_page_preview=True
    )

    results = search_wb_links(query)

    if results:
        message = "üèÜ *–¢–æ–ø-5 —Å–∞–º—ã—Ö –≤—ã–≥–æ–¥–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π:*\n\n"
        for i, r in enumerate(results, 1):
            stars = "‚≠ê" * min(5, max(1, r['reviews'] // 50))
            message += (
                f"{i}. *{r['name']}*\n"
                f"   üí∞ {r['price']:,.0f} ‚ÇΩ  |  {r['reviews']} –æ—Ç–∑—ã–≤–æ–≤  {stars}\n"
                f"   üîó [–ü–µ—Ä–µ–π—Ç–∏]({r['link']})\n\n"
            )
    else:
        message = "‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π —É—Ç–æ—á–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å."

    await update.message.reply_text(message, parse_mode="Markdown", disable_web_page_preview=True)

# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    keep_alive()  # –ó–∞–ø—É—Å–∫–∞–µ–º Flask

    if not TELEGRAM_TOKEN:
        logger.error("‚ùó –ë–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è: –Ω–µ –∑–∞–¥–∞–Ω TELEGRAM_TOKEN")
    else:
        logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
        app = Application.builder().token(TELEGRAM_TOKEN).build()

        app.add_handler(CommandHandler("start", start))
        app.add_handler(CallbackQueryHandler(button_handler))
        app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

        logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è...")
        app.run_polling()
