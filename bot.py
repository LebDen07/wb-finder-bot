# bot.py
import os
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.constants import ChatAction
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, ContextTypes, filters
from flask import Flask
from threading import Thread
import logging
import asyncio

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# === –¢–æ–∫–µ–Ω—ã ===
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
CHANNEL_LINK = "https://t.me/+uGrNl01GXGI4NjI6"

if not TELEGRAM_TOKEN:
    logger.error("‚ùó TELEGRAM_TOKEN –Ω–µ –∑–∞–¥–∞–Ω")
else:
    logger.info("‚úÖ TELEGRAM_TOKEN –∑–∞–≥—Ä—É–∂–µ–Ω")

# === Flask –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ ===
app_flask = Flask('')

@app_flask.route('/')
def home():
    return "‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7"

def run():
    port = int(os.getenv('PORT', 8080))
    app_flask.run(host='0.0.0.0', port=port)

def keep_alive():
    logger.info("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Flask-—Å–µ—Ä–≤–µ—Ä...")
    t = Thread(target=run)
    t.daemon = True
    t.start()

# === /start ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("‚ú® –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫", callback_data="start_searching")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        "üí´ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤...\n\n"
        "üõí *–µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π Telegram-–±–æ—Ç –≤ –†–æ—Å—Å–∏–∏, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–µ WB*\n\n"
        "üìå –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª:\n"
        "[*–õ—É—á—à–µ–µ —Å Wildberries | DenShop1*](https://t.me/+uGrNl01GXGI4NjI6)\n"
        "–¢–∞–º ‚Äî —Ç–æ–ª—å–∫–æ –≥–æ—Ä—è—á–∏–µ —Å–∫–∏–¥–∫–∏ –∏ –ª–∞–π—Ñ—Ö–∞–∫–∏! üî•",
        parse_mode="Markdown",
        disable_web_page_preview=True,
        reply_markup=reply_markup
    )

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ ===
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    if query.data == "start_searching":
        await query.edit_message_text("üîç –ù–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤—ã –∏—â–µ—Ç–µ –Ω–∞ Wildberries:")

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ ===
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.message.text.strip()
    if len(query) < 2:
        await update.message.reply_text("‚ùå –ó–∞–ø—Ä–æ—Å —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π.")
        return

    # –≠—Ñ—Ñ–µ–∫—Ç "–ø–µ—á–∞—Ç–∞–µ—Ç..."
    await context.bot.send_chat_action(chat_id=update.message.chat_id, action=ChatAction.TYPING)
    await asyncio.sleep(1.5)

    # –ö–Ω–æ–ø–∫–∏
    keyboard = [
        [InlineKeyboardButton("üèÜ 1. –õ–∏–¥–µ—Ä –ø—Ä–æ–¥–∞–∂", url=f"https://www.wildberries.ru/catalog/0/search.aspx?search={query}&dest=-1257786&sort=popular")],
        [InlineKeyboardButton("üíé 2. –°–∞–º—ã–µ –¥–æ—Ä–æ–≥–∏–µ", url=f"https://www.wildberries.ru/catalog/0/search.aspx?search={query}&dest=-1257786&sort=pricedown")],
        [InlineKeyboardButton("üí∞ 3. –°–∞–º—ã–µ –¥–µ—à—ë–≤—ã–µ", url=f"https://www.wildberries.ru/catalog/0/search.aspx?search={query}&dest=-1257786&sort=priceup")],
        [InlineKeyboardButton("‚≠ê 4. –í—ã—Å–æ–∫–∏–π —Ä–µ–π—Ç–∏–Ω–≥", url=f"https://www.wildberries.ru/catalog/0/search.aspx?search={query}&dest=-1257786&rating=4.9")],
        [InlineKeyboardButton("üî• 5. –•–∏—Ç —Å–µ–∑–æ–Ω–∞", url=f"https://www.wildberries.ru/catalog/0/search.aspx?search={query}&dest=-1257786&sort=popular")],
        [InlineKeyboardButton("üîÑ –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–æ–∏—Å–∫—É –¥—Ä—É–≥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞", callback_data="start_searching")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        f"üéØ *–í–æ—Ç –∫–∞–∫ –º–æ–∂–Ω–æ –∏—Å–∫–∞—Ç—å ¬´{query}¬ª:*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç:",
        parse_mode="Markdown",
        reply_markup=reply_markup
    )

# === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
if __name__ == "__main__":
    keep_alive()

    if not TELEGRAM_TOKEN:
        logger.error("‚ùó –ë–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è: –Ω–µ –∑–∞–¥–∞–Ω TELEGRAM_TOKEN")
    else:
        logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
        app = Application.builder().token(TELEGRAM_TOKEN).build()

        app.add_handler(CommandHandler("start", start))
        app.add_handler(CallbackQueryHandler(button_handler))
        app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

        logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è...")
        app.run_polling()
